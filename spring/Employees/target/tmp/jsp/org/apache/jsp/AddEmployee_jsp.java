/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2021-02-24 16:44:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AddEmployee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>  \n");
      out.write("    <html>  \n");
      out.write("    <head>     \n");
      out.write("    <title>Add Employee Form</title>  \n");
      out.write("    </head>  \n");
      out.write("    <body>  \n");
      out.write(" <h2>Enter The Employee Details:</h2>\n");
      out.write(" <form name=\"insert\" action=\"addEmployee\"  method=\"post\">\n");
      out.write(" <table>\n");
      out.write(" <tr> \n");
      out.write(" <td>FirstName:</td>\n");
      out.write(" <td><input type=\"text\" name=\"firstName\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>LastName:</td>\n");
      out.write(" <td><input type=\"text\" name=\"lastName\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>DateOfBirth:</td>\n");
      out.write(" <td><input type=\"date\" name=\"dateOfBirth\" required/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>E-Mail:</td>\n");
      out.write(" <td><input type=\"email\"  name=\"email\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>PhoneNumber:</td>\n");
      out.write(" <td><input type=\"text\" name=\"phoneNumber\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td><h3>Current Address:</h3></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr> \n");
      out.write(" <td>Street</td>\n");
      out.write(" <td><input type=\"text\" name=\"currentStreet\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>Area</td>\n");
      out.write(" <td><input type=\"text\" name=\"currentArea\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>City</td>\n");
      out.write(" <td><input type=\"text\" name=\"currentCity\" required/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>PinCode</td>\n");
      out.write(" <td><input type=\"text\"  name=\"currentPincode\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td><h3>Permanent Address:</h3></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr> \n");
      out.write(" <td>Street</td>\n");
      out.write(" <td><input type=\"text\" name=\"permanentStreet\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>Area</td>\n");
      out.write(" <td><input type=\"text\" name=\"permanentArea\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>City</td>\n");
      out.write(" <td><input type=\"text\" name=\"permanentCity\" required/></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr>\n");
      out.write(" <td>PinCode</td>\n");
      out.write(" <td><input type=\"text\"  name=\"permanentPincode\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" <td>Click to Submit</td>\n");
      out.write(" <td><input type=\"submit\" value=\"Add\"/></td>\n");
      out.write(" </tr>\n");
      out.write(" \n");
      out.write(" </table>\n");
      out.write(" </form>\n");
      out.write("      \n");
      out.write("    </body>  \n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
